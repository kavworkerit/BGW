version: '3.8'

services:
  api:
    build: ./backend
    env_file: .env
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./backend:/app
      - ./agents:/app/agents
    restart: unless-stopped

  worker:
    build: ./backend
    command: celery -A app.celery_app worker -l INFO
    env_file: .env
    depends_on:
      - api
      - redis
      - postgres
    volumes:
      - ./backend:/app
      - ./agents:/app/agents
    restart: unless-stopped

  beat:
    build: ./backend
    command: celery -A app.celery_app beat -l INFO
    env_file: .env
    depends_on:
      - worker
    volumes:
      - ./backend:/app
      - ./agents:/app/agents
    restart: unless-stopped

  frontend:
    build: ./frontend
    env_file: .env
    depends_on:
      - api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  nginx:
    image: nginx:stable
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api
    restart: unless-stopped

  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    restart: unless-stopped

  backup:
    build: ./backend
    command: python -m app.jobs.backup_daily
    env_file: .env
    depends_on:
      - postgres
      - minio
    volumes:
      - ./backups:/app/backups
      - ./backend:/app
    restart: "no"

volumes:
  pgdata:
  minio: