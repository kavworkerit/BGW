#!/usr/bin/env pwsh

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ Board Games Monitor
# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: PowerShell 7+, Docker, Docker Compose

param(
    [string]$InstallDir = "C:\BoardGamesMonitor",
    [string]$GitRepo = "https://github.com/your-username/board-games-monitor.git",
    [switch]$SkipDockerCheck = $false,
    [switch]$SkipEnvFile = $false,
    [switch]$DevMode = $false
)

Write-Host "üé≤ Board Games Monitor - –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è" -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function Test-Administrator {
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    return $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
}

if (-not (Test-Administrator)) {
    Write-Host "‚ö†Ô∏è  –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã Docker —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
    Write-Host "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
    $continue = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞? (y/N)"
    if ($continue -ne "y") {
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if (-not $SkipDockerCheck) {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Green

    try {
        docker version | Out-Null
        if ($LASTEXITCODE -ne 0) { throw }
        Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop" -ForegroundColor Red
        Write-Host "   –°–∫–∞—á–∞–π—Ç–µ: https://www.docker.com/products/docker-desktop" -ForegroundColor Yellow
        exit 1
    }

    try {
        docker-compose version | Out-Null
        if ($LASTEXITCODE -ne 0) { throw }
        Write-Host "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        exit 1
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $InstallDir" -ForegroundColor Green
if (Test-Path $InstallDir) {
    Write-Host "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
    $overwrite = Read-Host "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã? (y/N)"
    if ($overwrite -eq "y") {
        Remove-Item -Path "$InstallDir\*" -Recurse -Force -ErrorAction SilentlyContinue
    }
    else {
        Write-Host "‚ùå –û—Ç–º–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Red
        exit 1
    }
}
else {
    New-Item -ItemType Directory -Path $InstallDir -Force | Out-Null
}

Set-Location $InstallDir

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
Write-Host "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." -ForegroundColor Green
try {
    git clone $GitRepo .
    if ($LASTEXITCODE -ne 0) { throw }
    Write-Host "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" -ForegroundColor Red
    Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞" -ForegroundColor Yellow
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if (-not $SkipEnvFile) {
    Write-Host "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ .env..." -ForegroundColor Green

    $envFile = @"
# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
TZ=Europe/Moscow

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL=postgresql+psycopg2://app:app@postgres:5432/app

# Redis
REDIS_URL=redis://redis:6379/0

# MinIO S3 —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=raw
S3_SECURE=false

# Ollama (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# OLLAMA_URL=http://host.docker.internal:11434

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
SECRET_KEY=$(openssl rand -hex 32)
CORS_ORIGINS=http://localhost,http://localhost:3000

# Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# TELEGRAM_BOT_TOKEN=your_bot_token_here
# TELEGRAM_CHAT_ID=your_chat_id_here

# Web Push
VAPID_PUBLIC_KEY=your_vapid_public_key
VAPID_PRIVATE_KEY=your_vapid_private_key
VAPID_EMAIL=your_email@example.com

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
MAX_DAILY_PAGES=1000
DEFAULT_RPS=0.3
DEFAULT_BURST=1

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
"@

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    try {
        $secretKey = -join ((1..32) | ForEach-Object { '{0:x}' -f (Get-Random -Maximum 255) })
        $envFile = $envFile -replace '\$\(openssl rand -hex 32\)', $secretKey
    }
    catch {
        $envFile = $envFile -replace '\$\(openssl rand -hex 32\)', 'change-this-secret-key-in-production'
    }

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è VAPID –∫–ª—é—á–µ–π
    $envFile = $envFile -replace 'your_vapid_public_key', 'your-vapid-public-key-here'
    $envFile = $envFile -replace 'your_vapid_private_key', 'your-vapid-private-key-here'

    Set-Content -Path ".env" -Value $envFile -Encoding UTF8
    Write-Host "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
    Write-Host "   –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤" -ForegroundColor Yellow
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Green
$directories = @("backups", "agents", "logs")
foreach ($dir in $directories) {
    New-Item -ItemType Directory -Path $dir -Force | Out-Null
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..." -ForegroundColor Green
docker-compose build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–æ–≤" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Docker –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã" -ForegroundColor Green

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Green
docker-compose up -d
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã" -ForegroundColor Green

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green
Start-Sleep -Seconds 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green
docker-compose ps

# –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
Write-Host "üóÑÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Green
docker-compose exec -T api alembic upgrade head
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏" -ForegroundColor Yellow
}
else {
    Write-Host "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã" -ForegroundColor Green
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
Write-Host "üìú –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..." -ForegroundColor Green
$manageScript = @"
# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Board Games Monitor
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\manage.ps1 [start|stop|restart|logs|status|update|backup]

param(
    [Parameter(Position=0)]
    [ValidateSet("start", "stop", "restart", "logs", "status", "update", "backup")]
    [string]`$Action = "status"
)

Write-Host "üé≤ Board Games Monitor Manager" -ForegroundColor Cyan

switch (`$Action) {
    "start" {
        Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green
        docker-compose up -d
    }

    "stop" {
        Write-Host "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
        docker-compose down
    }

    "restart" {
        Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green
        docker-compose restart
    }

    "logs" {
        Write-Host "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Blue
        docker-compose logs -f
    }

    "status" {
        Write-Host "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:" -ForegroundColor Green
        docker-compose ps
    }

    "update" {
        Write-Host "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..." -ForegroundColor Green
        git pull
        docker-compose build
        docker-compose up -d
    }

    "backup" {
        Write-Host "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..." -ForegroundColor Green
        `$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
        `$backupFile = "backups/backup_`$timestamp.zip"

        # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        docker-compose exec -T postgres pg_dump -U app app > "backups/db_`$timestamp.sql"

        # –ê—Ä—Ö–∏–≤–∞—Ü–∏—è
        Compress-Archive -Path "backups/db_`$timestamp.sql" -DestinationPath `$backupFile
        Remove-Item "backups/db_`$timestamp.sql"

        Write-Host "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: `$backupFile" -ForegroundColor Green
    }
}

Write-Host "‚úÖ –ì–æ—Ç–æ–≤–æ!" -ForegroundColor Green
"@

Set-Content -Path "manage.ps1" -Value $manageScript -Encoding UTF8

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
Write-Host "" -ForegroundColor White
Write-Host "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "================================" -ForegroundColor Green
Write-Host "üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost" -ForegroundColor Cyan
Write-Host "üîß API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost/api" -ForegroundColor Cyan
Write-Host "üìä –ú–∏–ΩIO –∫–æ–Ω—Å–æ–ª—å: http://localhost:9001 (minioadmin/minioadmin)" -ForegroundColor Cyan
Write-Host "" -ForegroundColor White
Write-Host "üìú –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏:" -ForegroundColor Yellow
Write-Host "   .\manage.ps1 start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã" -ForegroundColor White
Write-Host "   .\manage.ps1 stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã" -ForegroundColor White
Write-Host "   .\manage.ps1 restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã" -ForegroundColor White
Write-Host "   .\manage.ps1 logs     - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏" -ForegroundColor White
Write-Host "   .\manage.ps1 status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å" -ForegroundColor White
Write-Host "   .\manage.ps1 update   - –û–±–Ω–æ–≤–∏—Ç—å" -ForegroundColor White
Write-Host "   .\manage.ps1 backup   - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø" -ForegroundColor White
Write-Host "" -ForegroundColor White
Write-Host "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/your-username/board-games-monitor" -ForegroundColor Cyan
Write-Host "" -ForegroundColor White

if ($DevMode) {
    Write-Host "üõ†Ô∏è  –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:" -ForegroundColor Yellow
    Write-Host "   API: http://localhost:8000/docs" -ForegroundColor White
    Write-Host "   Frontend: http://localhost:3000" -ForegroundColor White
}

Write-Host "‚ú® –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!" -ForegroundColor Green